{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilc\\\\Documents\\\\GitHub\\\\AnaliseClinica\\\\Frontend\\\\src\\\\components\\\\Login\\\\InputEmailWithErrors\\\\index.js\";\n\n/**\r\n *\r\n * InputEmailWithErrors\r\n *\r\n */\n\n/* eslint-disable no-mixed-operators */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty, isFunction } from 'lodash';\nimport cn from 'classnames'; // Design\n\nimport Label from '../Label';\nimport InputDescription from '../InputDescription';\nimport InputErrors from '../InputErrors';\nimport InputEmail from '../InputEmail'; // Utils\n\nimport validateInput from '../../../utils/inputsValidations';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputEmailWithErrors extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: [],\n      hasInitialValue: false\n    };\n\n    this.handleBlur = ({\n      target\n    }) => {\n      // Prevent from displaying error if the input is initially isEmpty\n      if (!isEmpty(target.value) || this.state.hasInitialValue) {\n        const errors = validateInput(target.value, this.props.validations, 'email');\n        this.setState({\n          errors,\n          hasInitialValue: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      value,\n      errors\n    } = this.props; // Prevent the input from displaying an error when the user enters and leaves without filling it\n\n    if (!isEmpty(value)) {\n      this.setState({\n        hasInitialValue: true\n      });\n    } // Display input error if it already has some\n\n\n    if (!isEmpty(errors)) {\n      this.setState({\n        errors\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Show required error if the input's value is received after the compo is mounted\n    if (!isEmpty(nextProps.value) && !this.state.hasInitialValue) {\n      this.setState({\n        hasInitialValue: true\n      });\n    } // Check if errors have been updated during validations\n\n\n    if (nextProps.didCheckErrors !== this.props.didCheckErrors) {\n      // Remove from the state the errors that have already been set\n      const errors = isEmpty(nextProps.errors) ? [] : nextProps.errors;\n      this.setState({\n        errors\n      });\n    }\n  }\n  /**\r\n   * Set the errors depending on the validations given to the input\r\n   * @param  {Object} target\r\n   */\n\n\n  render() {\n    const {\n      autoFocus,\n      deactivateErrorHighlight,\n      disabled,\n      errorsClassName,\n      errorsStyle,\n      inputClassName,\n      inputDescription,\n      inputDescriptionClassName,\n      inputDescriptionStyle,\n      inputStyle,\n      label,\n      labelClassName,\n      labelStyle,\n      name,\n      noErrorsDescription,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      style,\n      tabIndex,\n      value\n    } = this.props;\n    const handleBlur = isFunction(onBlur) ? onBlur : this.handleBlur;\n    let spacer = !isEmpty(inputDescription) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n\n    if (!noErrorsDescription && !isEmpty(this.state.errors)) {\n      spacer = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn('inputEmailWithErrors', this.props.customBootstrapClass, !isEmpty(this.props.className) && this.props.className),\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        className: labelClassName,\n        htmlFor: name,\n        message: label,\n        style: labelStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputEmail, {\n        autoFocus: autoFocus,\n        className: inputClassName,\n        disabled: disabled,\n        deactivateErrorHighlight: deactivateErrorHighlight,\n        error: !isEmpty(this.state.errors),\n        name: name,\n        onBlur: handleBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        placeholder: placeholder,\n        style: inputStyle,\n        tabIndex: tabIndex,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n        className: inputDescriptionClassName,\n        message: inputDescription,\n        style: inputDescriptionStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputErrors, {\n        className: errorsClassName,\n        errors: !noErrorsDescription && this.state.errors || [],\n        style: errorsStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), spacer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInputEmailWithErrors.defaultProps = {\n  autoFocus: false,\n  className: '',\n  customBootstrapClass: 'col-md-6',\n  deactivateErrorHighlight: false,\n  didCheckErrors: false,\n  disabled: false,\n  onBlur: false,\n  onFocus: () => {},\n  errors: [],\n  errorsClassName: '',\n  errorsStyle: {},\n  inputClassName: '',\n  inputDescription: '',\n  inputDescriptionClassName: '',\n  inputDescriptionStyle: {},\n  inputStyle: {},\n  label: '',\n  labelClassName: '',\n  labelStyle: {},\n  noErrorsDescription: false,\n  placeholder: '',\n  style: {},\n  tabIndex: '0',\n  validations: {}\n};\nInputEmailWithErrors.propTypes = {\n  autoFocus: PropTypes.bool,\n  className: PropTypes.string,\n  customBootstrapClass: PropTypes.string,\n  deactivateErrorHighlight: PropTypes.bool,\n  didCheckErrors: PropTypes.bool,\n  disabled: PropTypes.bool,\n  errors: PropTypes.array,\n  errorsClassName: PropTypes.string,\n  errorsStyle: PropTypes.object,\n  inputClassName: PropTypes.string,\n  inputDescription: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    id: PropTypes.string,\n    params: PropTypes.object\n  })]),\n  inputDescriptionClassName: PropTypes.string,\n  inputDescriptionStyle: PropTypes.object,\n  inputStyle: PropTypes.object,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    id: PropTypes.string,\n    params: PropTypes.object\n  })]),\n  labelClassName: PropTypes.string,\n  labelStyle: PropTypes.object,\n  name: PropTypes.string.isRequired,\n  noErrorsDescription: PropTypes.bool,\n  onBlur: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  placeholder: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.string,\n  validations: PropTypes.object,\n  value: PropTypes.string.isRequired\n};\nexport default InputEmailWithErrors;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/components/Login/InputEmailWithErrors/index.js"],"names":["React","PropTypes","isEmpty","isFunction","cn","Label","InputDescription","InputErrors","InputEmail","validateInput","InputEmailWithErrors","Component","state","errors","hasInitialValue","handleBlur","target","value","props","validations","setState","componentDidMount","componentWillReceiveProps","nextProps","didCheckErrors","render","autoFocus","deactivateErrorHighlight","disabled","errorsClassName","errorsStyle","inputClassName","inputDescription","inputDescriptionClassName","inputDescriptionStyle","inputStyle","label","labelClassName","labelStyle","name","noErrorsDescription","onBlur","onChange","onFocus","placeholder","style","tabIndex","spacer","customBootstrapClass","className","defaultProps","propTypes","bool","string","array","object","oneOfType","func","shape","id","params","isRequired"],"mappings":"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","sourcesContent":["/**\r\n *\r\n * InputEmailWithErrors\r\n *\r\n */\r\n\r\n/* eslint-disable no-mixed-operators */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isEmpty, isFunction } from 'lodash';\r\nimport cn from 'classnames';\r\n\r\n// Design\r\nimport Label from '../Label';\r\nimport InputDescription from '../InputDescription';\r\nimport InputErrors from '../InputErrors';\r\nimport InputEmail from '../InputEmail';\r\n\r\n// Utils\r\nimport validateInput from '../../../utils/inputsValidations';\r\n\r\nimport './styles.css';\r\n\r\nclass InputEmailWithErrors extends React.Component {\r\n  // eslint-disable-line react/prefer-stateless-function\r\n  state = { errors: [], hasInitialValue: false };\r\n\r\n  componentDidMount() {\r\n    const { value, errors } = this.props;\r\n\r\n    // Prevent the input from displaying an error when the user enters and leaves without filling it\r\n    if (!isEmpty(value)) {\r\n      this.setState({ hasInitialValue: true });\r\n    }\r\n\r\n    // Display input error if it already has some\r\n    if (!isEmpty(errors)) {\r\n      this.setState({ errors });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Show required error if the input's value is received after the compo is mounted\r\n    if (!isEmpty(nextProps.value) && !this.state.hasInitialValue) {\r\n      this.setState({ hasInitialValue: true });\r\n    }\r\n\r\n    // Check if errors have been updated during validations\r\n    if (nextProps.didCheckErrors !== this.props.didCheckErrors) {\r\n      // Remove from the state the errors that have already been set\r\n      const errors = isEmpty(nextProps.errors) ? [] : nextProps.errors;\r\n      this.setState({ errors });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the errors depending on the validations given to the input\r\n   * @param  {Object} target\r\n   */\r\n  handleBlur = ({ target }) => {\r\n    // Prevent from displaying error if the input is initially isEmpty\r\n    if (!isEmpty(target.value) || this.state.hasInitialValue) {\r\n      const errors = validateInput(\r\n        target.value,\r\n        this.props.validations,\r\n        'email'\r\n      );\r\n      this.setState({ errors, hasInitialValue: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      autoFocus,\r\n      deactivateErrorHighlight,\r\n      disabled,\r\n      errorsClassName,\r\n      errorsStyle,\r\n      inputClassName,\r\n      inputDescription,\r\n      inputDescriptionClassName,\r\n      inputDescriptionStyle,\r\n      inputStyle,\r\n      label,\r\n      labelClassName,\r\n      labelStyle,\r\n      name,\r\n      noErrorsDescription,\r\n      onBlur,\r\n      onChange,\r\n      onFocus,\r\n      placeholder,\r\n      style,\r\n      tabIndex,\r\n      value,\r\n    } = this.props;\r\n    const handleBlur = isFunction(onBlur) ? onBlur : this.handleBlur;\r\n\r\n    let spacer = !isEmpty(inputDescription) ? (\r\n      <div className=\"spacer\" />\r\n    ) : (\r\n      <div />\r\n    );\r\n\r\n    if (!noErrorsDescription && !isEmpty(this.state.errors)) {\r\n      spacer = <div />;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={cn(\r\n          'inputEmailWithErrors',\r\n          this.props.customBootstrapClass,\r\n          !isEmpty(this.props.className) && this.props.className\r\n        )}\r\n        style={style}\r\n      >\r\n        <Label\r\n          className={labelClassName}\r\n          htmlFor={name}\r\n          message={label}\r\n          style={labelStyle}\r\n        />\r\n        <InputEmail\r\n          autoFocus={autoFocus}\r\n          className={inputClassName}\r\n          disabled={disabled}\r\n          deactivateErrorHighlight={deactivateErrorHighlight}\r\n          error={!isEmpty(this.state.errors)}\r\n          name={name}\r\n          onBlur={handleBlur}\r\n          onChange={onChange}\r\n          onFocus={onFocus}\r\n          placeholder={placeholder}\r\n          style={inputStyle}\r\n          tabIndex={tabIndex}\r\n          value={value}\r\n        />\r\n        <InputDescription\r\n          className={inputDescriptionClassName}\r\n          message={inputDescription}\r\n          style={inputDescriptionStyle}\r\n        />\r\n        <InputErrors\r\n          className={errorsClassName}\r\n          errors={(!noErrorsDescription && this.state.errors) || []}\r\n          style={errorsStyle}\r\n        />\r\n        {spacer}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInputEmailWithErrors.defaultProps = {\r\n  autoFocus: false,\r\n  className: '',\r\n  customBootstrapClass: 'col-md-6',\r\n  deactivateErrorHighlight: false,\r\n  didCheckErrors: false,\r\n  disabled: false,\r\n  onBlur: false,\r\n  onFocus: () => {},\r\n  errors: [],\r\n  errorsClassName: '',\r\n  errorsStyle: {},\r\n  inputClassName: '',\r\n  inputDescription: '',\r\n  inputDescriptionClassName: '',\r\n  inputDescriptionStyle: {},\r\n  inputStyle: {},\r\n  label: '',\r\n  labelClassName: '',\r\n  labelStyle: {},\r\n  noErrorsDescription: false,\r\n  placeholder: '',\r\n  style: {},\r\n  tabIndex: '0',\r\n  validations: {},\r\n};\r\n\r\nInputEmailWithErrors.propTypes = {\r\n  autoFocus: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  customBootstrapClass: PropTypes.string,\r\n  deactivateErrorHighlight: PropTypes.bool,\r\n  didCheckErrors: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  errorsClassName: PropTypes.string,\r\n  errorsStyle: PropTypes.object,\r\n  inputClassName: PropTypes.string,\r\n  inputDescription: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      params: PropTypes.object,\r\n    }),\r\n  ]),\r\n  inputDescriptionClassName: PropTypes.string,\r\n  inputDescriptionStyle: PropTypes.object,\r\n  inputStyle: PropTypes.object,\r\n  label: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      params: PropTypes.object,\r\n    }),\r\n  ]),\r\n  labelClassName: PropTypes.string,\r\n  labelStyle: PropTypes.object,\r\n  name: PropTypes.string.isRequired,\r\n  noErrorsDescription: PropTypes.bool,\r\n  onBlur: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\r\n  onChange: PropTypes.func.isRequired,\r\n  onFocus: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  style: PropTypes.object,\r\n  tabIndex: PropTypes.string,\r\n  validations: PropTypes.object,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default InputEmailWithErrors;\r\n"]},"metadata":{},"sourceType":"module"}