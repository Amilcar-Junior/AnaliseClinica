{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilc\\\\Documents\\\\GitHub\\\\AnaliseClinica\\\\Frontend\\\\src\\\\components\\\\Login\\\\ImgPreview\\\\index.js\";\n\n/**\r\n *\r\n *\r\n * ImgPreview\r\n *\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { get, has, isArray, isEmpty, size } from 'lodash';\nimport cn from 'classnames';\nimport BkgImg from \"../../../assets/icons/icon_upload.svg\";\nimport ImgPreviewArrow from '../ImgPreviewArrow';\nimport ImgPreviewHint from '../ImgPreviewHint';\nimport './styles.scss';\n/* eslint-disable no-mixed-operators */\n\n/* eslint-disable  no-unused-vars */\n\n/* eslint-disable  jsx-a11y/alt-text */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImgPreview extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgURL: '',\n      isDraging: false,\n      isOver: false,\n      isOverArrow: false,\n      isImg: false,\n      isInitValue: false\n    };\n\n    this.getFileType = fileName => fileName.split('.').slice(-1)[0];\n\n    this.generateImgURL = file => {\n      if (this.isPictureType(file.name) && !has(file, 'url')) {\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n          this.setState({\n            imgURL: reader.result,\n            isImg: true\n          });\n        };\n\n        reader.readAsDataURL(file);\n      } else if (has(file, 'url')) {\n        const isImg = this.isPictureType(file.name);\n        const imgURL = file.url[0] === '/' ? `http://localhost:1337${file.url}` : file.url;\n        this.setState({\n          isImg,\n          imgURL\n        });\n      } else {\n        this.setState({\n          isImg: false,\n          imgURL: file.name\n        });\n      }\n    };\n\n    this.handleClick = type => {\n      const {\n        files,\n        position\n      } = this.props;\n      let file;\n      let nextPosition;\n\n      switch (type) {\n        case 'right':\n          file = files[position + 1] || files[0];\n          nextPosition = files[position + 1] ? position + 1 : 0;\n          break;\n\n        case 'left':\n          file = files[position - 1] || files[files.length - 1];\n          nextPosition = files[position - 1] ? position - 1 : files.length - 1;\n          break;\n\n        default: // Do nothing\n\n      } // Update the parent position\n\n\n      this.updateFilePosition(nextPosition);\n    };\n\n    this.handleDragEnter = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({\n        isDraging: true\n      });\n    };\n\n    this.handleDragLeave = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({\n        isDraging: false\n      });\n    };\n\n    this.handleDragOver = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDrop = e => {\n      this.setState({\n        isDraging: false\n      });\n      this.props.onDrop(e);\n    };\n\n    this.isPictureType = fileName => /\\.(jpe?g|png|gif)$/i.test(fileName);\n\n    this.renderContent = () => {\n      const fileType = this.getFileType(this.state.imgURL);\n\n      if (this.state.isImg) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.imgURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileIcon\",\n        onDrop: this.handleDrop,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa fa-file-${fileType}-o`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.updateFilePosition = newPosition => {\n      // this.setState({ position: newPosition });\n      this.props.updateFilePosition(newPosition);\n    };\n  }\n\n  componentDidMount() {\n    // We don't need the generateImgURL function here since the compo will\n    // always have an init value here\n    this.setState({\n      imgURL: get(this.props.files, ['0', 'url'], '') || get(this.props.files, 'url', ''),\n      isImg: this.isPictureType(get(this.props.files, ['0', 'name'], ''))\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.isUploading !== this.props.isUploading) {\n      const lastFile = this.props.multiple ? nextProps.files.slice(-1)[0] : nextProps.files[0] || nextProps.files;\n      this.generateImgURL(lastFile);\n\n      if (this.props.multiple) {\n        this.updateFilePosition(nextProps.files.length - 1);\n      }\n    } // Update the preview or slide pictures or init the component\n\n\n    if (nextProps.didDeleteFile !== this.props.didDeleteFile || nextProps.position !== this.props.position || size(nextProps.files) !== size(this.props.files) && !this.state.isInitValue) {\n      const file = nextProps.files[nextProps.position] || nextProps.files || '';\n      this.generateImgURL(file);\n\n      if (!this.state.isInitValue) {\n        this.setState({\n          isInitValue: true\n        });\n      }\n    }\n  }\n\n  componentDidCatch(error, info) {\n    console.log('An error occured in ImgPreview', info);\n  }\n\n  render() {\n    const {\n      files,\n      onBrowseClick\n    } = this.props;\n    const {\n      imgURL\n    } = this.state;\n    const containerStyle = isEmpty(imgURL) ? {\n      backgroundImage: `url(${BkgImg})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      zIndex: 9999\n    } : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"imgPreviewContainer\"),\n      onDragOver: this.handleDragOver,\n      onDragEnter: this.handleDragEnter,\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(this.state.isDraging && \"overlay\"),\n        onDragLeave: this.handleDragLeave,\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImgPreviewHint, {\n        displayHint: isEmpty(files),\n        onClick: onBrowseClick,\n        onDrop: this.handleDrop,\n        showWhiteHint: this.state.isDraging || isEmpty(files)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), !isEmpty(imgURL) && this.renderContent(), /*#__PURE__*/_jsxDEV(ImgPreviewArrow, {\n        enable: isArray(files) && size(files) > 1,\n        onClick: this.handleClick,\n        onMouseEnter: e => this.setState({\n          isOverArrow: true\n        }),\n        onMouseLeave: e => this.setState({\n          isOverArrow: false\n        }),\n        show: isArray(files) && size(files) > 1,\n        type: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImgPreviewArrow, {\n        enable: isArray(files) && size(files) > 1,\n        onClick: this.handleClick,\n        onMouseEnter: e => this.setState({\n          isOverArrow: true\n        }),\n        onMouseLeave: e => this.setState({\n          isOverArrow: false\n        }),\n        show: isArray(files) && size(files) > 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nImgPreview.defaultProps = {\n  didDeleteFile: false,\n  files: [],\n  isUploading: false,\n  multiple: false,\n  name: '',\n  onBrowseClick: () => {},\n  onChange: () => {},\n  onDrop: () => {},\n  position: 0,\n  updateFilePosition: () => {}\n};\nImgPreview.propTypes = {\n  didDeleteFile: PropTypes.bool,\n  files: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  isUploading: PropTypes.bool,\n  multiple: PropTypes.bool,\n  name: PropTypes.string,\n  onBrowseClick: PropTypes.func,\n  onChange: PropTypes.func,\n  onDrop: PropTypes.func,\n  position: PropTypes.number,\n  updateFilePosition: PropTypes.func\n};\nexport default ImgPreview;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/components/Login/ImgPreview/index.js"],"names":["React","PropTypes","get","has","isArray","isEmpty","size","cn","ImgPreviewArrow","ImgPreviewHint","ImgPreview","Component","state","imgURL","isDraging","isOver","isOverArrow","isImg","isInitValue","getFileType","fileName","split","slice","generateImgURL","file","isPictureType","name","reader","FileReader","onloadend","setState","result","readAsDataURL","url","handleClick","type","files","position","props","nextPosition","length","updateFilePosition","handleDragEnter","e","preventDefault","stopPropagation","handleDragLeave","handleDragOver","handleDrop","onDrop","test","renderContent","fileType","newPosition","componentDidMount","componentWillReceiveProps","nextProps","isUploading","lastFile","multiple","didDeleteFile","componentDidCatch","error","info","console","log","render","onBrowseClick","containerStyle","backgroundImage","BkgImg","backgroundRepeat","backgroundPosition","zIndex","defaultProps","onChange","propTypes","bool","oneOfType","object","array","string","func","number"],"mappings":"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","sourcesContent":["/**\r\n *\r\n *\r\n * ImgPreview\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get, has, isArray, isEmpty, size } from 'lodash';\r\nimport cn from 'classnames';\r\n\r\nimport BkgImg  from '../../../assets/icons/icon_upload.svg';\r\nimport ImgPreviewArrow from '../ImgPreviewArrow';\r\nimport ImgPreviewHint from '../ImgPreviewHint';\r\n\r\nimport './styles.scss';\r\n\r\n/* eslint-disable no-mixed-operators */\r\n/* eslint-disable  no-unused-vars */\r\n/* eslint-disable  jsx-a11y/alt-text */\r\nclass ImgPreview extends React.Component {\r\n  state = {\r\n    imgURL: '',\r\n    isDraging: false,\r\n    isOver: false,\r\n    isOverArrow: false,\r\n    isImg: false,\r\n    isInitValue: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // We don't need the generateImgURL function here since the compo will\r\n    // always have an init value here\r\n    this.setState({\r\n        imgURL: get(this.props.files, ['0', 'url'], '') || get(this.props.files, 'url', ''),\r\n        isImg: this.isPictureType(get(this.props.files, ['0', 'name'], '')),\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.isUploading !== this.props.isUploading) {\r\n      const lastFile = this.props.multiple ? nextProps.files.slice(-1)[0] : nextProps.files[0] || nextProps.files;\r\n      this.generateImgURL(lastFile);\r\n\r\n      if (this.props.multiple) {\r\n        this.updateFilePosition(nextProps.files.length - 1);\r\n      }\r\n    }\r\n\r\n    // Update the preview or slide pictures or init the component\r\n    if (nextProps.didDeleteFile !== this.props.didDeleteFile || nextProps.position !== this.props.position || size(nextProps.files) !== size(this.props.files) && !this.state.isInitValue) {\r\n      const file = nextProps.files[nextProps.position] || nextProps.files || '';\r\n      this.generateImgURL(file)\r\n\r\n      if (!this.state.isInitValue) {\r\n        this.setState({ isInitValue: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    console.log('An error occured in ImgPreview', info);\r\n  }\r\n\r\n  getFileType = (fileName) => fileName.split('.').slice(-1)[0];\r\n\r\n  /**\r\n   * [generateImgURL description]\r\n   * @param  {FileList} files\r\n   * @return {URL}\r\n   */\r\n  generateImgURL = (file) => {\r\n    if (this.isPictureType(file.name) && !has(file, 'url')) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          imgURL: reader.result,\r\n          isImg: true,\r\n        });\r\n      }\r\n\r\n      reader.readAsDataURL(file);\r\n    } else if (has(file, 'url')) {\r\n      const isImg = this.isPictureType(file.name);\r\n      const imgURL = file.url[0] === '/' ?`http://localhost:1337${file.url}` :file.url;\r\n\r\n      this.setState({ isImg, imgURL });\r\n    } else {\r\n      this.setState({ isImg: false, imgURL: file.name });\r\n    }\r\n  }\r\n\r\n  handleClick = (type) => {\r\n    const { files, position } = this.props;\r\n    let file;\r\n    let nextPosition;\r\n\r\n    switch (type) {\r\n      case 'right':\r\n        file = files[position + 1] || files[0];\r\n        nextPosition = files[position + 1] ? position + 1 : 0;\r\n        break;\r\n      case 'left':\r\n        file = files[position - 1] || files[files.length - 1];\r\n        nextPosition = files[position - 1] ? position - 1 : files.length - 1;\r\n        break;\r\n      default:\r\n        // Do nothing\r\n    }\r\n\r\n    // Update the parent position\r\n    this.updateFilePosition(nextPosition);\r\n  }\r\n\r\n  handleDragEnter = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.setState({ isDraging: true });\r\n  }\r\n\r\n  handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.setState({ isDraging: false });\r\n  }\r\n\r\n  handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  handleDrop = (e) => {\r\n    this.setState({ isDraging: false });\r\n    this.props.onDrop(e);\r\n  }\r\n\r\n  // TODO change logic to depend on the type\r\n  isPictureType = (fileName) => /\\.(jpe?g|png|gif)$/i.test(fileName);\r\n\r\n  renderContent = () => {\r\n    const fileType = this.getFileType(this.state.imgURL);\r\n\r\n    if (this.state.isImg) {\r\n      return (\r\n        <img src={this.state.imgURL} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"fileIcon\" onDrop={this.handleDrop}>\r\n        <i className={`fa fa-file-${fileType}-o`} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updateFilePosition = (newPosition) => {\r\n    // this.setState({ position: newPosition });\r\n    this.props.updateFilePosition(newPosition);\r\n  }\r\n\r\n  render() {\r\n    const { files, onBrowseClick } = this.props;\r\n    const { imgURL } = this.state;\r\n    const containerStyle = isEmpty(imgURL) ?\r\n      {\r\n        backgroundImage: `url(${BkgImg})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        zIndex: 9999,\r\n      } : {};\r\n\r\n    return (\r\n        <div\r\n          className={cn(\r\n            \"imgPreviewContainer\",\r\n          )}\r\n          onDragOver={this.handleDragOver}\r\n          onDragEnter={this.handleDragEnter}\r\n          style={containerStyle}\r\n        >\r\n          <div\r\n            className={cn(this.state.isDraging && \"overlay\")}\r\n            onDragLeave={this.handleDragLeave}\r\n            onDragOver={this.handleDragOver}\r\n            onDrop={this.handleDrop}\r\n          />\r\n\r\n          <ImgPreviewHint\r\n            displayHint={isEmpty(files)}\r\n            onClick={onBrowseClick}\r\n            onDrop={this.handleDrop}\r\n            showWhiteHint={this.state.isDraging || isEmpty(files)}\r\n          />\r\n\r\n          { !isEmpty(imgURL) && this.renderContent() }\r\n\r\n          <ImgPreviewArrow\r\n            enable={isArray(files) && size(files) > 1}\r\n            onClick={this.handleClick}\r\n            onMouseEnter={(e) => this.setState({ isOverArrow: true })}\r\n            onMouseLeave={(e) => this.setState({ isOverArrow: false })}\r\n            show={isArray(files) && size(files) > 1}\r\n            type=\"right\"\r\n          />\r\n\r\n          <ImgPreviewArrow\r\n            enable={isArray(files) && size(files) > 1}\r\n            onClick={this.handleClick}\r\n            onMouseEnter={(e) => this.setState({ isOverArrow: true })}\r\n            onMouseLeave={(e) => this.setState({ isOverArrow: false })}\r\n            show={isArray(files) && size(files) > 1}\r\n          />\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nImgPreview.defaultProps = {\r\n  didDeleteFile: false,\r\n  files: [],\r\n  isUploading: false,\r\n  multiple: false,\r\n  name: '',\r\n  onBrowseClick: () => {},\r\n  onChange: () => {},\r\n  onDrop: () => {},\r\n  position: 0,\r\n  updateFilePosition: () => {},\r\n};\r\n\r\nImgPreview.propTypes = {\r\n  didDeleteFile: PropTypes.bool,\r\n  files: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  isUploading: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  onBrowseClick: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onDrop: PropTypes.func,\r\n  position: PropTypes.number,\r\n  updateFilePosition: PropTypes.func,\r\n};\r\n\r\nexport default ImgPreview;\r\n"]},"metadata":{},"sourceType":"module"}