{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilc\\\\Documents\\\\GitHub\\\\AnaliseClinica\\\\Frontend\\\\src\\\\containers\\\\PrivateRoute\\\\index.js\";\n\n/**\r\n *\r\n * PrivateRoute\r\n * Higher Order Component that blocks navigation when the user is not logged in\r\n * and redirect the user to login page\r\n *\r\n * Wrap your protected routes to secure your container\r\n */\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport MainAdmLayout from '../../components/layouts/main-adm';\nimport auth from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => auth.getToken() !== null ? /*#__PURE__*/_jsxDEV(MainAdmLayout, {\n    children: /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/auth/login',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/containers/PrivateRoute/index.js"],"names":["React","Redirect","Route","MainAdmLayout","auth","PrivateRoute","component","Component","rest","props","getToken","pathname","state","from","location"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACnB,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXL,IAAI,CAACM,QAAL,OAAoB,IAApB,gBACE,QAAC,aAAD;AAAA,2BACG,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF,gBAME,QAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFE,MAAAA,QAAQ,EAAE,aADR;AAEFC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AATN;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMT,Y;AAqBN,eAAeA,YAAf","sourcesContent":["/**\r\n *\r\n * PrivateRoute\r\n * Higher Order Component that blocks navigation when the user is not logged in\r\n * and redirect the user to login page\r\n *\r\n * Wrap your protected routes to secure your container\r\n */\r\n\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport MainAdmLayout from '../../components/layouts/main-adm';\r\n\r\nimport auth from '../../utils/auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.getToken() !== null ? (\r\n        <MainAdmLayout>\r\n           <Component {...props} />\r\n        </MainAdmLayout>\r\n     \r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/auth/login',\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}