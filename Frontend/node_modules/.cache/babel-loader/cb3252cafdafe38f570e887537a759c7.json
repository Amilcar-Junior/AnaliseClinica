{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilc\\\\Documents\\\\GitHub\\\\AnaliseClinica\\\\Frontend\\\\src\\\\components\\\\Login\\\\InputsIndex\\\\index.js\";\n\n/**\r\n *\r\n * InputsIndex references all the input with errors available\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Design\n\nimport InputCheckboxWithErrors from '../InputCheckboxWithErrors';\nimport InputEmailWithErrors from '../InputEmailWithErrors';\nimport InputFileWithErrors from '../InputFileWithErrors';\nimport InputPasswordWithErrors from '../InputPasswordWithErrors';\nimport InputTextWithErrors from '../InputTextWithErrors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultInputError = ({\n  type\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [\"Your input type: \", /*#__PURE__*/_jsxDEV(\"b\", {\n    children: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 22\n  }, this), \" does not exist\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n_c = DefaultInputError;\nconst inputs = {\n  checkbox: InputCheckboxWithErrors,\n  email: InputEmailWithErrors,\n  file: InputFileWithErrors,\n  password: InputPasswordWithErrors,\n  string: InputTextWithErrors,\n  text: InputTextWithErrors\n};\n\nfunction InputsIndex(props) {\n  const inputValue = props.type === 'checkbox' || props.type === 'toggle' ? props.value || false : props.value || '';\n  const Input = inputs[props.type] ? inputs[props.type] : DefaultInputError;\n  return /*#__PURE__*/_jsxDEV(Input, { ...props,\n    value: inputValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = InputsIndex;\nInputsIndex.defaultProps = {};\nInputsIndex.propTypes = {\n  type: PropTypes.string.isRequired\n};\nexport default InputsIndex;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DefaultInputError\");\n$RefreshReg$(_c2, \"InputsIndex\");","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/components/Login/InputsIndex/index.js"],"names":["React","PropTypes","InputCheckboxWithErrors","InputEmailWithErrors","InputFileWithErrors","InputPasswordWithErrors","InputTextWithErrors","DefaultInputError","type","inputs","checkbox","email","file","password","string","text","InputsIndex","props","inputValue","value","Input","defaultProps","propTypes","isRequired"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACxB;AAAA,+CACmB;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,iB;AAMN,MAAME,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAER,uBADG;AAEbS,EAAAA,KAAK,EAAER,oBAFM;AAGbS,EAAAA,IAAI,EAAER,mBAHO;AAIbS,EAAAA,QAAQ,EAAER,uBAJG;AAKbS,EAAAA,MAAM,EAAER,mBALK;AAMbS,EAAAA,IAAI,EAAET;AANO,CAAf;;AASA,SAASU,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,UAAU,GACdD,KAAK,CAACT,IAAN,KAAe,UAAf,IAA6BS,KAAK,CAACT,IAAN,KAAe,QAA5C,GACIS,KAAK,CAACE,KAAN,IAAe,KADnB,GAEIF,KAAK,CAACE,KAAN,IAAe,EAHrB;AAKA,QAAMC,KAAK,GAAGX,MAAM,CAACQ,KAAK,CAACT,IAAP,CAAN,GAAqBC,MAAM,CAACQ,KAAK,CAACT,IAAP,CAA3B,GAA0CD,iBAAxD;AAEA,sBAAO,QAAC,KAAD,OAAWU,KAAX;AAAkB,IAAA,KAAK,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MATQF,W;AAWTA,WAAW,CAACK,YAAZ,GAA2B,EAA3B;AAEAL,WAAW,CAACM,SAAZ,GAAwB;AACtBd,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBS;AADD,CAAxB;AAIA,eAAeP,WAAf","sourcesContent":["/**\r\n *\r\n * InputsIndex references all the input with errors available\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Design\r\nimport InputCheckboxWithErrors from '../InputCheckboxWithErrors';\r\nimport InputEmailWithErrors from '../InputEmailWithErrors';\r\nimport InputFileWithErrors from '../InputFileWithErrors';\r\nimport InputPasswordWithErrors from '../InputPasswordWithErrors';\r\nimport InputTextWithErrors from '../InputTextWithErrors';\r\n\r\nconst DefaultInputError = ({ type }) => (\r\n  <div>\r\n    Your input type: <b>{type}</b> does not exist\r\n  </div>\r\n);\r\n\r\nconst inputs = {\r\n  checkbox: InputCheckboxWithErrors,\r\n  email: InputEmailWithErrors,\r\n  file: InputFileWithErrors,\r\n  password: InputPasswordWithErrors,\r\n  string: InputTextWithErrors,\r\n  text: InputTextWithErrors,\r\n};\r\n\r\nfunction InputsIndex(props) {\r\n  const inputValue =\r\n    props.type === 'checkbox' || props.type === 'toggle'\r\n      ? props.value || false\r\n      : props.value || '';\r\n      \r\n  const Input = inputs[props.type] ? inputs[props.type] : DefaultInputError;\r\n\r\n  return <Input {...props} value={inputValue} />;\r\n}\r\n\r\nInputsIndex.defaultProps = {};\r\n\r\nInputsIndex.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default InputsIndex;\r\n"]},"metadata":{},"sourceType":"module"}