{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilc\\\\Documents\\\\GitHub\\\\AnaliseClinica\\\\Frontend\\\\src\\\\components\\\\Login\\\\InputCheckbox\\\\index.js\";\n\n/**\r\n *\r\n * InputCheckbox\r\n *\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty, isFunction } from 'lodash';\nimport cn from 'classnames';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputCheckbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = () => {\n      const target = {\n        name: this.props.name,\n        type: 'checkbox',\n        value: !this.props.value\n      };\n      this.props.onChange({\n        target\n      });\n    };\n  }\n\n  render() {\n    const {\n      autoFocus,\n      className,\n      disabled,\n      label,\n      name,\n      onBlur,\n      onFocus,\n      style,\n      tabIndex,\n      value\n    } = this.props;\n\n    const checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: autoFocus,\n      className: \"form-check-input\",\n      checked: value,\n      disabled: disabled,\n      id: name,\n      onBlur: onBlur,\n      onChange: this.handleChange,\n      onFocus: onFocus,\n      tabIndex: tabIndex,\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n\n    let content = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this);\n\n    if (typeof label === 'string') {\n      content = /*#__PURE__*/_jsxDEV(\"label\", {\n        className: cn('form-check-label', 'labelCheckbox', disabled && 'disabled'),\n        htmlFor: name,\n        children: [checkbox, label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (isFunction(label)) {\n      content = /*#__PURE__*/_jsxDEV(\"label\", {\n        className: cn('form-check-label', disabled && 'disabled'),\n        htmlFor: name,\n        children: [checkbox, label()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn('form-check', 'inputCheckbox', !isEmpty(className) && className),\n      style: style,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInputCheckbox.defaultProps = {\n  autoFocus: false,\n  className: '',\n  disabled: false,\n  label: '',\n  onBlur: () => {},\n  onFocus: () => {},\n  style: {},\n  tabIndex: '0',\n  value: false\n};\nInputCheckbox.propTypes = {\n  autoFocus: PropTypes.bool,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  name: PropTypes.string.isRequired,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  style: PropTypes.object,\n  tabIndex: PropTypes.string,\n  value: PropTypes.bool\n};\nexport default InputCheckbox;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/components/Login/InputCheckbox/index.js"],"names":["React","PropTypes","isEmpty","isFunction","cn","InputCheckbox","Component","handleChange","target","name","props","type","value","onChange","render","autoFocus","className","disabled","label","onBlur","onFocus","style","tabIndex","checkbox","content","defaultProps","propTypes","bool","string","oneOfType","func","isRequired","object"],"mappings":"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","sourcesContent":["/**\r\n *\r\n * InputCheckbox\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isEmpty, isFunction } from 'lodash';\r\nimport cn from 'classnames';\r\n\r\nimport './styles.css';\r\n\r\nclass InputCheckbox extends React.Component {\r\n  handleChange = () => {\r\n    const target = {\r\n      name: this.props.name,\r\n      type: 'checkbox',\r\n      value: !this.props.value,\r\n    };\r\n\r\n    this.props.onChange({ target });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      autoFocus,\r\n      className,\r\n      disabled,\r\n      label,\r\n      name,\r\n      onBlur,\r\n      onFocus,\r\n      style,\r\n      tabIndex,\r\n      value,\r\n    } = this.props;\r\n    const checkbox = (\r\n      <input\r\n        autoFocus={autoFocus}\r\n        className=\"form-check-input\"\r\n        checked={value}\r\n        disabled={disabled}\r\n        id={name}\r\n        onBlur={onBlur}\r\n        onChange={this.handleChange}\r\n        onFocus={onFocus}\r\n        tabIndex={tabIndex}\r\n        type=\"checkbox\"\r\n      />\r\n    );\r\n\r\n    let content = <div />;\r\n\r\n    if (typeof label === 'string') {\r\n      content = (\r\n        <label\r\n          className={cn(\r\n            'form-check-label',\r\n            'labelCheckbox',\r\n            disabled && 'disabled'\r\n          )}\r\n          htmlFor={name}\r\n        >\r\n          {checkbox}\r\n          {label}\r\n        </label>\r\n      );\r\n    }\r\n\r\n    if (isFunction(label)) {\r\n      content = (\r\n        <label\r\n          className={cn('form-check-label', disabled && 'disabled')}\r\n          htmlFor={name}\r\n        >\r\n          {checkbox}\r\n          {label()}\r\n        </label>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={cn(\r\n          'form-check',\r\n          'inputCheckbox',\r\n          !isEmpty(className) && className\r\n        )}\r\n        style={style}\r\n      >\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInputCheckbox.defaultProps = {\r\n  autoFocus: false,\r\n  className: '',\r\n  disabled: false,\r\n  label: '',\r\n  onBlur: () => {},\r\n  onFocus: () => {},\r\n  style: {},\r\n  tabIndex: '0',\r\n  value: false,\r\n};\r\n\r\nInputCheckbox.propTypes = {\r\n  autoFocus: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  name: PropTypes.string.isRequired,\r\n  onBlur: PropTypes.func,\r\n  onChange: PropTypes.func.isRequired,\r\n  onFocus: PropTypes.func,\r\n  style: PropTypes.object,\r\n  tabIndex: PropTypes.string,\r\n  value: PropTypes.bool,\r\n};\r\n\r\nexport default InputCheckbox;\r\n"]},"metadata":{},"sourceType":"module"}