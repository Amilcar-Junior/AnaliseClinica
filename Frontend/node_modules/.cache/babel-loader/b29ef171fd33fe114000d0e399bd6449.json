{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilc\\\\Documents\\\\GitHub\\\\AnaliseClinica\\\\Frontend\\\\src\\\\components\\\\Login\\\\InputCheckboxWithErrors\\\\index.js\";\n\n/**\r\n *\r\n * InputCheckboxWithErrors\r\n *\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty, isFunction } from 'lodash';\nimport cn from 'classnames'; // Design\n\nimport InputDescription from '../InputDescription';\nimport InputErrors from '../InputErrors';\nimport InputCheckbox from '../InputCheckbox';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputCheckboxWithErrors extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: []\n    };\n  }\n\n  componentDidMount() {\n    // Display input error if it already has some\n    const {\n      errors\n    } = this.props;\n\n    if (!isEmpty(errors)) {\n      this.setState({\n        errors\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Check if errors have been updated during validations\n    if (nextProps.didCheckErrors !== this.props.didCheckErrors) {\n      // Remove from the state the errors that have already been set\n      const errors = isEmpty(nextProps.errors) ? [] : nextProps.errors;\n      this.setState({\n        errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      autoFocus,\n      className,\n      customBootstrapClass,\n      disabled,\n      errorsClassName,\n      errorsStyle,\n      inputClassName,\n      inputDescription,\n      inputDescriptionClassName,\n      inputDescriptionStyle,\n      inputStyle,\n      label,\n      name,\n      noErrorsDescription,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      style,\n      tabIndex,\n      title,\n      value\n    } = this.props;\n    const handleBlur = onBlur ? onBlur : () => {};\n    let inputTitle = title;\n    let spacer = !isEmpty(inputDescription) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n\n    if (!noErrorsDescription && !isEmpty(this.state.errors)) {\n      spacer = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this);\n    }\n\n    if (isFunction(title)) {\n      inputTitle = title();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn('inputCheckboxContainer', customBootstrapClass, !isEmpty(className) && className),\n      style: style,\n      children: [inputTitle, /*#__PURE__*/_jsxDEV(InputCheckbox, {\n        autoFocus: autoFocus,\n        className: inputClassName,\n        disabled: disabled,\n        label: label,\n        name: name,\n        onBlur: handleBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        placeholder: placeholder,\n        style: inputStyle,\n        tabIndex: tabIndex,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n        className: cn('inputCheckboxDescriptionContainer', inputDescriptionClassName),\n        message: this.props.inputDescription,\n        style: inputDescriptionStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputErrors, {\n        className: errorsClassName,\n        errors: this.state.errors,\n        style: errorsStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), spacer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInputCheckboxWithErrors.defaultProps = {\n  autoFocus: false,\n  className: '',\n  customBootstrapClass: 'col-md-3',\n  didCheckErrors: false,\n  disabled: false,\n  onBlur: () => {},\n  onFocus: () => {},\n  errors: [],\n  errorsClassName: '',\n  errorsStyle: {},\n  inputClassName: '',\n  inputDescription: '',\n  inputDescriptionClassName: '',\n  inputDescriptionStyle: {},\n  inputStyle: {},\n  label: '',\n  labelClassName: '',\n  labelStyle: {},\n  noErrorsDescription: false,\n  placeholder: '',\n  style: {},\n  tabIndex: '0',\n  title: '',\n  validations: {},\n  value: false\n};\nInputCheckboxWithErrors.propTypes = {\n  autoFocus: PropTypes.bool,\n  className: PropTypes.string,\n  customBootstrapClass: PropTypes.string,\n  deactivateErrorHighlight: PropTypes.bool,\n  didCheckErrors: PropTypes.bool,\n  disabled: PropTypes.bool,\n  errors: PropTypes.array,\n  errorsClassName: PropTypes.string,\n  errorsStyle: PropTypes.object,\n  inputClassName: PropTypes.string,\n  inputDescription: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    id: PropTypes.string,\n    params: PropTypes.object\n  })]),\n  inputDescriptionClassName: PropTypes.string,\n  inputDescriptionStyle: PropTypes.object,\n  inputStyle: PropTypes.object,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    id: PropTypes.string,\n    params: PropTypes.object\n  })]),\n  name: PropTypes.string.isRequired,\n  noErrorsDescription: PropTypes.bool,\n  onBlur: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  placeholder: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    id: PropTypes.string,\n    params: PropTypes.object\n  })]),\n  validations: PropTypes.object,\n  value: PropTypes.bool\n};\nexport default InputCheckboxWithErrors;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/components/Login/InputCheckboxWithErrors/index.js"],"names":["React","PropTypes","isEmpty","isFunction","cn","InputDescription","InputErrors","InputCheckbox","InputCheckboxWithErrors","Component","state","errors","componentDidMount","props","setState","componentWillReceiveProps","nextProps","didCheckErrors","render","autoFocus","className","customBootstrapClass","disabled","errorsClassName","errorsStyle","inputClassName","inputDescription","inputDescriptionClassName","inputDescriptionStyle","inputStyle","label","name","noErrorsDescription","onBlur","onChange","onFocus","placeholder","style","tabIndex","title","value","handleBlur","inputTitle","spacer","defaultProps","labelClassName","labelStyle","validations","propTypes","bool","string","deactivateErrorHighlight","array","object","oneOfType","func","shape","id","params","isRequired"],"mappings":"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","sourcesContent":["/**\r\n *\r\n * InputCheckboxWithErrors\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isEmpty, isFunction } from 'lodash';\r\nimport cn from 'classnames';\r\n\r\n// Design\r\nimport InputDescription from '../InputDescription';\r\nimport InputErrors from '../InputErrors';\r\nimport InputCheckbox from '../InputCheckbox';\r\n\r\nimport './styles.css';\r\n\r\nclass InputCheckboxWithErrors extends React.Component {\r\n  state = { errors: [] };\r\n\r\n  componentDidMount() {\r\n    // Display input error if it already has some\r\n    const { errors } = this.props;\r\n    if (!isEmpty(errors)) {\r\n      this.setState({ errors });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Check if errors have been updated during validations\r\n    if (nextProps.didCheckErrors !== this.props.didCheckErrors) {\r\n      // Remove from the state the errors that have already been set\r\n      const errors = isEmpty(nextProps.errors) ? [] : nextProps.errors;\r\n      this.setState({ errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      autoFocus,\r\n      className,\r\n      customBootstrapClass,\r\n      disabled,\r\n      errorsClassName,\r\n      errorsStyle,\r\n      inputClassName,\r\n      inputDescription,\r\n      inputDescriptionClassName,\r\n      inputDescriptionStyle,\r\n      inputStyle,\r\n      label,\r\n      name,\r\n      noErrorsDescription,\r\n      onBlur,\r\n      onChange,\r\n      onFocus,\r\n      placeholder,\r\n      style,\r\n      tabIndex,\r\n      title,\r\n      value,\r\n    } = this.props;\r\n\r\n    const handleBlur = onBlur ? onBlur : () => {};\r\n    let inputTitle = title;\r\n\r\n    let spacer = !isEmpty(inputDescription) ? (\r\n      <div className=\"spacer\" />\r\n    ) : (\r\n      <div />\r\n    );\r\n\r\n    if (!noErrorsDescription && !isEmpty(this.state.errors)) {\r\n      spacer = <div />;\r\n    }\r\n\r\n    if (isFunction(title)) {\r\n      inputTitle = title();\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={cn(\r\n          'inputCheckboxContainer',\r\n          customBootstrapClass,\r\n          !isEmpty(className) && className\r\n        )}\r\n        style={style}\r\n      >\r\n        {inputTitle}\r\n        <InputCheckbox\r\n          autoFocus={autoFocus}\r\n          className={inputClassName}\r\n          disabled={disabled}\r\n          label={label}\r\n          name={name}\r\n          onBlur={handleBlur}\r\n          onChange={onChange}\r\n          onFocus={onFocus}\r\n          placeholder={placeholder}\r\n          style={inputStyle}\r\n          tabIndex={tabIndex}\r\n          value={value}\r\n        />\r\n        <InputDescription\r\n          className={cn(\r\n            'inputCheckboxDescriptionContainer',\r\n            inputDescriptionClassName\r\n          )}\r\n          message={this.props.inputDescription}\r\n          style={inputDescriptionStyle}\r\n        />\r\n        <InputErrors\r\n          className={errorsClassName}\r\n          errors={this.state.errors}\r\n          style={errorsStyle}\r\n        />\r\n        {spacer}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInputCheckboxWithErrors.defaultProps = {\r\n  autoFocus: false,\r\n  className: '',\r\n  customBootstrapClass: 'col-md-3',\r\n  didCheckErrors: false,\r\n  disabled: false,\r\n  onBlur: () => {},\r\n  onFocus: () => {},\r\n  errors: [],\r\n  errorsClassName: '',\r\n  errorsStyle: {},\r\n  inputClassName: '',\r\n  inputDescription: '',\r\n  inputDescriptionClassName: '',\r\n  inputDescriptionStyle: {},\r\n  inputStyle: {},\r\n  label: '',\r\n  labelClassName: '',\r\n  labelStyle: {},\r\n  noErrorsDescription: false,\r\n  placeholder: '',\r\n  style: {},\r\n  tabIndex: '0',\r\n  title: '',\r\n  validations: {},\r\n  value: false,\r\n};\r\nInputCheckboxWithErrors.propTypes = {\r\n  autoFocus: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  customBootstrapClass: PropTypes.string,\r\n  deactivateErrorHighlight: PropTypes.bool,\r\n  didCheckErrors: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  errorsClassName: PropTypes.string,\r\n  errorsStyle: PropTypes.object,\r\n  inputClassName: PropTypes.string,\r\n  inputDescription: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      params: PropTypes.object,\r\n    }),\r\n  ]),\r\n  inputDescriptionClassName: PropTypes.string,\r\n  inputDescriptionStyle: PropTypes.object,\r\n  inputStyle: PropTypes.object,\r\n  label: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      params: PropTypes.object,\r\n    }),\r\n  ]),\r\n  name: PropTypes.string.isRequired,\r\n  noErrorsDescription: PropTypes.bool,\r\n  onBlur: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\r\n  onChange: PropTypes.func.isRequired,\r\n  onFocus: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  style: PropTypes.object,\r\n  tabIndex: PropTypes.string,\r\n  title: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      params: PropTypes.object,\r\n    }),\r\n  ]),\r\n  validations: PropTypes.object,\r\n  value: PropTypes.bool,\r\n};\r\n\r\nexport default InputCheckboxWithErrors;\r\n"]},"metadata":{},"sourceType":"module"}