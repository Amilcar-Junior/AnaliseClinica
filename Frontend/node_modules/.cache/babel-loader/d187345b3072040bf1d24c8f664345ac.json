{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilc\\\\Documents\\\\GitHub\\\\AnaliseClinica\\\\Frontend\\\\src\\\\containers\\\\ConnectPage\\\\index.js\";\n\n/**\r\n *\r\n * ConnectPage\r\n *\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Utils\n\nimport auth from '../../utils/auth';\nimport request from '../../utils/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConnectPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.redirectUser = path => {\n      this.props.history.push(path);\n    };\n  }\n\n  // We only use this lifecycle because it's only mounted once and the saga already handle\n  // the redirections depending on the API response\n  // NOTE: YOU can delete this container and do the logic in the HomePage formContainer\n  // This implementation was just made for the sake of the example and to silmplify the logic\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          provider\n        }\n      },\n      location: {\n        search\n      }\n    } = this.props;\n    const requestURL = `http://localhost:1337/auth/${provider}/callback${search}`;\n    request(requestURL, {\n      method: 'GET'\n    }).then(response => {\n      auth.setToken(response.jwt, true);\n      auth.setUserInfo(response.user, true);\n      this.redirectUser('/home-page-adm');\n    }).catch(err => {\n      console.log(err.response.payload);\n      this.redirectUser('/auth/login');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Retrieving your token and checking its validity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nConnectPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default ConnectPage;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/containers/ConnectPage/index.js"],"names":["React","PropTypes","auth","request","ConnectPage","Component","redirectUser","path","props","history","push","componentDidMount","match","params","provider","location","search","requestURL","method","then","response","setToken","jwt","setUserInfo","user","catch","err","console","log","payload","render","propTypes","object","isRequired"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAyBxCC,YAzBwC,GAyBzBC,IAAI,IAAI;AACrB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBH,IAAxB;AACD,KA3BuC;AAAA;;AACxC;AACA;AAEA;AACA;AACAI,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AACJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OADH;AAEJC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF;AAFN,QAGF,KAAKR,KAHT;AAIA,UAAMS,UAAU,GAAI,8BAA6BH,QAAS,YAAWE,MAAO,EAA5E;AAEAb,IAAAA,OAAO,CAACc,UAAD,EAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb,CAAP,CACGC,IADH,CACQC,QAAQ,IAAI;AAChBlB,MAAAA,IAAI,CAACmB,QAAL,CAAcD,QAAQ,CAACE,GAAvB,EAA4B,IAA5B;AACApB,MAAAA,IAAI,CAACqB,WAAL,CAAiBH,QAAQ,CAACI,IAA1B,EAAgC,IAAhC;AACA,WAAKlB,YAAL,CAAkB,gBAAlB;AACD,KALH,EAMGmB,KANH,CAMSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,QAAJ,CAAaS,OAAzB;AACA,WAAKvB,YAAL,CAAkB,aAAlB;AACD,KATH;AAUD;;AAMDwB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAnCuC;;AAsC1C1B,WAAW,CAAC2B,SAAZ,GAAwB;AACtBhB,EAAAA,QAAQ,EAAEd,SAAS,CAAC+B,MAAV,CAAiBC,UADL;AAEtBrB,EAAAA,KAAK,EAAEX,SAAS,CAAC+B,MAAV,CAAiBC;AAFF,CAAxB;AAKA,eAAe7B,WAAf","sourcesContent":["/**\r\n *\r\n * ConnectPage\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Utils\r\nimport auth from '../../utils/auth';\r\nimport request from '../../utils/request';\r\n\r\nclass ConnectPage extends React.Component {\r\n  // We only use this lifecycle because it's only mounted once and the saga already handle\r\n  // the redirections depending on the API response\r\n\r\n  // NOTE: YOU can delete this container and do the logic in the HomePage formContainer\r\n  // This implementation was just made for the sake of the example and to silmplify the logic\r\n  componentDidMount() {\r\n    const {\r\n      match: { params: { provider } },\r\n      location: { search },\r\n    } = this.props;\r\n    const requestURL = `http://localhost:1337/auth/${provider}/callback${search}`;\r\n\r\n    request(requestURL, { method: 'GET' })\r\n      .then(response => {\r\n        auth.setToken(response.jwt, true);\r\n        auth.setUserInfo(response.user, true);\r\n        this.redirectUser('/home-page-adm');\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response.payload);\r\n        this.redirectUser('/auth/login');\r\n      });\r\n  }\r\n\r\n  redirectUser = path => {\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Retrieving your token and checking its validity</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nConnectPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ConnectPage;\r\n"]},"metadata":{},"sourceType":"module"}