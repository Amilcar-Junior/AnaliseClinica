{"ast":null,"code":"import { CREATE_PACIENTE, RETRIEVE_PACIENTES, UPDATE_PACIENTE, DELETE_PACIENTE } from \"./actionTypes\";\nconst initialState = [];\n\nfunction pacienteReducer(pacientes = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_PACIENTE:\n      return [...pacientes, payload];\n\n    case RETRIEVE_PACIENTES:\n      return payload;\n\n    case UPDATE_PACIENTE:\n      return pacientes.map(paciente => {\n        if (paciente.id === payload.id) {\n          return { ...paciente,\n            ...payload\n          };\n        } else {\n          return paciente;\n        }\n      });\n\n    case DELETE_PACIENTE:\n      return pacientes.filter(({\n        id\n      }) => id !== payload.id);\n\n    default:\n      return pacientes;\n  }\n}\n\nexport default pacienteReducer;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/AnaliseClinica/Frontend/src/conection/pacientes/reducers.js"],"names":["CREATE_PACIENTE","RETRIEVE_PACIENTES","UPDATE_PACIENTE","DELETE_PACIENTE","initialState","pacienteReducer","pacientes","action","type","payload","map","paciente","id","filter"],"mappings":"AAAA,SAEIA,eAFJ,EAIIC,kBAJJ,EAMIC,eANJ,EAQIC,eARJ,QAUU,eAVV;AAYG,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,eAAT,CAAyBC,SAAS,GAAGF,YAArC,EAAmDG,MAAnD,EAA2D;AAE1D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AAEE,SAAKR,eAAL;AAEE,aAAO,CAAC,GAAGM,SAAJ,EAAeG,OAAf,CAAP;;AAEF,SAAKR,kBAAL;AAEE,aAAOQ,OAAP;;AAEF,SAAKP,eAAL;AAEE,aAAOI,SAAS,CAACI,GAAV,CAAeC,QAAD,IAAc;AAEjC,YAAIA,QAAQ,CAACC,EAAT,KAAgBH,OAAO,CAACG,EAA5B,EAAgC;AAE9B,iBAAO,EAEL,GAAGD,QAFE;AAIL,eAAGF;AAJE,WAAP;AAQD,SAVD,MAUO;AAEL,iBAAOE,QAAP;AAED;AAEF,OAlBM,CAAP;;AAoBF,SAAKR,eAAL;AAEE,aAAOG,SAAS,CAACO,MAAV,CAAiB,CAAC;AAAED,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKH,OAAO,CAACG,EAA5C,CAAP;;AAEF;AAEE,aAAON,SAAP;AAtCJ;AA0CA;;AAED,eAAeD,eAAf","sourcesContent":["import {\r\n\r\n    CREATE_PACIENTE,\r\n   \r\n    RETRIEVE_PACIENTES,\r\n   \r\n    UPDATE_PACIENTE,\r\n   \r\n    DELETE_PACIENTE,\r\n   \r\n   } from \"./actionTypes\";\r\n   \r\n   const initialState = [];\r\n   \r\n   function pacienteReducer(pacientes = initialState, action) {\r\n   \r\n    const { type, payload } = action;\r\n   \r\n    switch (type) {\r\n   \r\n      case CREATE_PACIENTE:\r\n   \r\n        return [...pacientes, payload];\r\n   \r\n      case RETRIEVE_PACIENTES:\r\n   \r\n        return payload;\r\n   \r\n      case UPDATE_PACIENTE:\r\n   \r\n        return pacientes.map((paciente) => {\r\n   \r\n          if (paciente.id === payload.id) {\r\n   \r\n            return {\r\n   \r\n              ...paciente,\r\n   \r\n              ...payload,\r\n   \r\n            };\r\n   \r\n          } else {\r\n   \r\n            return paciente;\r\n   \r\n          }\r\n   \r\n        });\r\n   \r\n      case DELETE_PACIENTE:\r\n   \r\n        return pacientes.filter(({ id }) => id !== payload.id);\r\n   \r\n      default:\r\n   \r\n        return pacientes;\r\n   \r\n    }\r\n   \r\n   }\r\n   \r\n   export default pacienteReducer;"]},"metadata":{},"sourceType":"module"}